project : default-build <optimization>off debug ;
# project : default-build <optimization>speed release ;

INSTALL_LOC = <location>stage/ ;

### Boost directory

import os ;

local BOOST_ROOT = [ os.environ BOOST_ROOT ] ;
if $(BOOST_ROOT) {
  # echo "BOOST_ROOT = '" $(BOOST_ROOT) "'" ;
  BOOST_INCLUDE_DIR = $(BOOST_ROOT) ;
} else {
  echo "BOOST_ROOT variable not set!" ;
  BOOST_INCLUDE_DIR = "/usr/include" ;
}

# Try to find boost/version.hpp

if [ GLOB $(BOOST_INCLUDE_DIR)/boost/ : version.hpp ] {
  echo "Using BOOST_INCLUDE_DIR = '" $(BOOST_INCLUDE_DIR) "'" ;  
} else {
  echo "Could not find boost!" ;
  BOOST_INCLUDE_DIR = ;
}

alias boost_headers : : : : <toolset>msvc:<include>$(BOOST_INCLUDE_DIR) ;

### Test target

alias spirit_po : boost_headers : : : <toolset>msvc:<include>../include/ ;

GNU_FLAGS = "-Wall -Werror -Wextra -pedantic -std=c++11 -isystem../include -isystem$(BOOST_INCLUDE_DIR)" ;
FLAGS = <toolset>gcc:<cxxflags>$(GNU_FLAGS) <toolset>clang:<cxxflags>$(GNU_FLAGS) <toolset>msvc:<warnings-as-errors>"off" ;

exe main : main.cpp spirit_po  : $(FLAGS) <c++-template-depth>200 ;

install install-bin : main : $(INSTALL_LOC) ;
