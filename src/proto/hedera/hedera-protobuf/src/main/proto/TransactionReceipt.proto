syntax = "proto3";

package proto;

option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "BasicTypes.proto";
import "ResponseCode.proto";
import "ExchangeRate.proto";

/*
The summary of a transaction's result so far. If the transaction has not reached consensus, this result will be necessarily incomplete.
 */
message TransactionReceipt {
    // The consensus status of the transaction; is UNKNOWN if consensus has not been reached, or if the
    // associated transaction did not have a valid payer signature
    ResponseCodeEnum status = 1;

    // In the receipt of a CryptoCreate, the id of the newly created account
    AccountID accountID = 2;
    // In the receipt of a FileCreate, the id of the newly created file
    FileID fileID = 3;
    // In the receipt of a ContractCreate, the id of the newly created contract
    ContractID contractID = 4;
    // The exchange rates in effect when the transaction reached consensus
    ExchangeRateSet exchangeRate = 5;
    // In the receipt of a ConsensusCreateTopic, the id of the newly created topic.
    TopicID topicID = 6;

    // In the receipt of a ConsensusSubmitMessage, the new sequence number of the topic that received the message
    uint64 topicSequenceNumber = 7;

    // In the receipt of a ConsensusSubmitMessage, the new running hash of the topic that received the message.
    // This 48-byte field is the output of a particular SHA-384 digest whose input data are determined by the
    // value of the topicRunningHashVersion below. The bytes of each uint64 or uint32 are to be in Big-Endian
    // format.
    //
    // IF the topicRunningHashVersion is '0' or '1', then the input data to the SHA-384 digest are, in order:
    // ---
    // 1. The previous running hash of the topic (48 bytes)
    // 2. The topic's shard (8 bytes)
    // 3. The topic's realm (8 bytes)
    // 4. The topic's number (8 bytes)
    // 5. The number of seconds since the epoch before the ConsensusSubmitMessage reached consensus (8 bytes)
    // 6. The number of nanoseconds since 5. before the ConsensusSubmitMessage reached consensus (4 bytes)
    // 7. The topicSequenceNumber from above (8 bytes)
    // 8. The message bytes from the ConsensusSubmitMessage (variable).
    //
    // Otherwise, IF the topicRunningHashVersion is '2', then the input data to the SHA-384 digest are, in order:
    // ---
    // 1. The previous running hash of the topic (48 bytes)
    // 2. The topicRunningHashVersion below (8 bytes)
    // 3. The topic's shard (8 bytes)
    // 4. The topic's realm (8 bytes)
    // 5. The topic's number (8 bytes)
    // 6. The number of seconds since the epoch before the ConsensusSubmitMessage reached consensus (8 bytes)
    // 7. The number of nanoseconds since 6. before the ConsensusSubmitMessage reached consensus (4 bytes)
    // 8. The topicSequenceNumber from above (8 bytes)
    // 9. The output of the SHA-384 digest of the message bytes from the consensusSubmitMessage (48 bytes)
    bytes topicRunningHash = 8;

    // In the receipt of a ConsensusSubmitMessage, the version of the SHA-384 digest used to update the running hash.
    uint64 topicRunningHashVersion = 9;
}
